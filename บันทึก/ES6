เขียน javascript รูปแบบใหม่
การประกาศตัวแปรโดยใช้ let แทน var เนื่องจาก var block scobe กว้างกว่า let
const ประกาศค่าคงที่
---------------------------------------------
arrow function การประกาศฟังชั่นแบบใหม่
Employee=()=>{} แบบหลายบรรทัด
Employee=()=> parameter แบบบรรทัดเดียว

let Employee = (fname,lname)=> fname , lname
const Employee2 = (fname,lname)=> fname , lname
---------------------------------------------------
สร้าง object

const หรือ let ก็ได้
const customer = {
    customer_name : "",
    customer_age : 15,
    customer_address : {
        county : "thai",
        zipcode : 18120
    },
    ; เพิ่ม Method ในฟังชั่นได้
    showdata(){
          console.log("แสดงข้อมูลลูกค้า")
          console.log(customer.cusmername)
          console.log(customer.cusmer_lastname)
          
    }
    customer.showdata() การเข้าถึงผ่าน ตัวแปร object.Method
}
------------------------------------------------
การทำงานกับ string
Multiline string : สามารถทำงานกับข้อความยาวๆได้ โดยการขึ้นบรรทัดใหม่ไม่มีข้อผิดพลาด (``)

interporation สามารถแทรกตัวแปรลงในStringได้ โดยใช้ `MESSAGGE ${ ตัวแปร }`

ตัวอย่าง
const myfunction = (username,lastname)=> username + lastname

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
    console.log(`ชื่อและนามสกุล ${myfunction("kitti","last")}`)
);
----------------------------------------------------------------
Spread operator : ใช้จัดการกระจายสมาชิกใน Array ออกมาโดยเติมเครื่องหมาย ... ด้านหน้าตัวแปร Array
ตัวอย่าง
const newarr = [10,20,30]
const newarrs = [...newarr,20,30]
แบบ object ก็ทำได้เช่นกัน
const myVehicle = {
  brand: 'Ford',
  model: 'Mustang',
  color: 'red'
}

const updateMyVehicle = {
  type: 'car',
  year: 2021, 
  color: 'yellow'
}

const myUpdatedVehicle = {...myVehicle, ...updateMyVehicle}
------------------------------------------------
rest parameter คือ การรับพารามิเตอร์เข้าไปทำงานในฟังชั่นไม่จำกัดจำนวนพารามิเตอร์ หรือ ใช้ for ในการะกระจายสมาชิกหรือค่าพารามิเตอร์ที่รับเข้ามา
let x = (fullname,lastname,...param)=>{}

let summation = (...numberarr)=>{
    let total = 0
    for(let number of numberarr) console.log(total += number)
}
---------------------------------------------------------------------
destructuring : การสลายโครงสร้าง คือ การกำหนดค่าที่อยู่ภายในArray หรือ object 
ให้กับตัวแปรโดยใช้วิธีการจับคู่ตัวแปรกับค่าใน Array หรือ object เช่น

ตัวอย่างสร้างแบบ Array
const coller = ["red","yello"]
const [a , b] = coller

ตัวอย่างแบบ object
const product = {
    product_name :"computer",
    product_price : 15000,
    product_type : "c"
}
const {product_name,product_price} = product
const {product_name:pro_name} = product

บรรทัด 86 คือ สร้างค่าคงที่และใช้ destructuring และก็นำ key ใน object มากำหนดค่าตัวแปรเพื่อนำค่าใน key มาใช้งาน
----------------------------------------------------------------------
defultparameter กำหนดค่าเริ่มต้นของ parameter แบบฟังชั่น

let myfunction = (nickname,age_number,customeradd = "กรุงเทพ")=>{
    let address = `ชื่อเล่น ${nickname} อายุ ${age_number} ที่อยู่ปัจจุบัน ${customeradd}`
    return address
}
** ค่าdefult parameter ควรกำหนดไว้ด้านหลังของพารามิเตอร์
--------------------------------------------------------------------------


